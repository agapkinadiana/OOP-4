<Window x:Class="Lab14_15.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:Lab14_15"
        mc:Ignorable="d"
        Title="MainWindow" Background="WhiteSmoke"  Height="500" Width="930" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10" Margin="0,0,0,0">
                                        <!-- <Border.Effect>
                                            <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <Converters:ShadowConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Effect>-->
                                    </Border>
                                    <!--<ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                    </ProgressBar>-->
                                </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid MouseDown="Grid_MouseDown" Grid.Row="0">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD6D3D3" Offset="0.984"/>
                    <GradientStop Color="#FFF0F0F0"/>
                </LinearGradientBrush>
            </Grid.Background>
            <StackPanel Orientation="Horizontal">
                <Button HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="10 5 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FFFF2E00" BorderBrush="#FFFF2E00" Click="Button_Click"/>
                <Button x:Name="Roll_Up" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="7 5 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FFFFC500" BorderBrush="#FFFFC500" Click="Roll_Up_Click"/>
                <Button x:Name="maxsizeButton" IsEnabled="False" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="7 5 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FF59D114" BorderBrush="#FF59D114"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="320"/>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Button Content="create a circle" HorizontalAlignment="Left" Margin="160 50 0 0" VerticalAlignment="Top" Width="160" Click="CreateCircleButton_Click"/>
                <RadioButton IsChecked="True" x:Name="BlueRadioBut"  Content="Голубые фигуры" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top"/>
                <RadioButton x:Name="RedRadioBut"  Content="Красные фигуры" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top"/>
                <TextBlock x:Name="tbk" HorizontalAlignment="Left" Margin="20 100 0 0" TextWrapping="Wrap" FontSize="14" FontStretch="Medium"  VerticalAlignment="Top" Height="40" Width="300" Grid.ColumnSpan="2"/>
                <Button Content="create a rectangle" HorizontalAlignment="Left" Margin="160 10 0 0" VerticalAlignment="Top" Width="160" Click="CreateRectButton_Click"/>
                <ComboBox x:Name="cmx" SelectedIndex="0" HorizontalAlignment="Left" Margin="10,170,0,0" VerticalAlignment="Top" Width="120">
                    <ComboBoxItem Content="Маргарита"></ComboBoxItem>
                    <ComboBoxItem Content="Пепперони"></ComboBoxItem>
                    <ComboBoxItem Content="Гавайская"></ComboBoxItem>
                </ComboBox>
                <Button x:Name="MakePizzaButton" Content="cook the pizza!" HorizontalAlignment="Left" Margin="160 170 0 0" VerticalAlignment="Top" Width="160" Click="MakePizzaButton_Click"/>
                <TextBlock x:Name="tbk1" HorizontalAlignment="Center" Margin="20 260 20 0" TextWrapping="Wrap" FontSize="14" FontStretch="Medium"   VerticalAlignment="Top" Height="60" Width="auto" Grid.ColumnSpan="2"/>
                <Button x:Name="RepeatOrder" Content="repeat order!" HorizontalAlignment="Left" Margin="160 210 0 0" VerticalAlignment="Top" Width="160" Click="RepeatOrder_Click"/>
                <TextBlock x:Name="tbk2" HorizontalAlignment="Center"  Margin="20 340 20 0" TextWrapping="Wrap" FontSize="14" FontStretch="Medium"  VerticalAlignment="Top" Width="auto" Height="60" Grid.ColumnSpan="2" />
            </Grid>
            
            <Grid  Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="190"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="AdapterTxtbl" Margin="20" Grid.Row="0"
                       FontSize="14" Height="120" VerticalAlignment="Top" 
                           ScrollViewer.CanContentScroll="True" />
                <Button x:Name="Adapter_Button" Click="Adapter_Button_Click" Width="100" Grid.Row="0"
                     Height="30"  VerticalAlignment="Top" Margin="0 150 0 0" Content="Adapter"/>

                <TextBlock x:Name="DecoratorTxtbl" Grid.Row="1" VerticalAlignment="Top" Margin="20"
                                   FontSize="14" Height="210" TextWrapping="Wrap" 
                           ScrollViewer.CanContentScroll="True" />
                <Button x:Name="Decorator_Button" Grid.Row="1"
                                Click="Decorator_Button_Click" Width="100" Height="30" 
                        VerticalAlignment="Top" Margin="0 240 0 0"  Content="Decorator"/>
            </Grid>
            <Grid  Grid.Column="2">
                <ListBox x:Name="CompositeTxtbl"  FontSize="14" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10 10 0 0"                       
                                 Width="200" Height="400"
                                 ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                <Button x:Name="Composite_Button"
                                    Click="Composite_Button_Click"
                                    Width="100" Height="30" Margin="0 10 10 0"
                            VerticalAlignment="Top" HorizontalAlignment="Right"
                                    Content="Composite"/>
                    <Button x:Name="FindItem_Button"
                                    Click="Find_Button_Click"
                                    Width="100" Height="30"
                                    VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 50 10 0"
                                    Content="Find Letter"/>
                <Button x:Name="FindItem2_Button"
                                    Click="Find2_Button_Click"
                                    Width="100" Height="30"
                                    VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 90 10 0"
                                    Content="Find Toy"/>

                <Button Content="Memento" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="120" Click="Button1_Click" Height="35" Margin="0 0 130 10"/>
                <Button Content="State" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="120" Click="Button_Click_1" Height="35" Margin="130 0 0 10"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
